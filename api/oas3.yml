swagger: "2.0"
info:
  description: "This is a user server that will handle control of user data in the badass_db database."
  version: "1.0.0"
  title: "BadAss Users"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "0.0.0.0:8080"
basePath: "/user"
tags:
- name: "user"
  description: "Operations about user"
schemes:
- "https"
- "http"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Create user"
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/CreateUser"
      responses:
        "200":
          description: "successful operation"
          schema: 
            $ref: "#/definitions/ApiResponse"
        "400": 
          description: "error creating user"
          schema: 
            $ref: "#/definitions/ApiResponse"
        "500": 
          description: "error creating user"
          schema: 
            $ref: "#/definitions/ApiResponse"
  /user/{userId}:
    get:
      tags:
      - "user"
      summary: "Get user by user name"
      description: ""
      operationId: "getUserByName"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user that needs to be fetched"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/User"
        "500":
          description: "error fetching user"
          schema:
            $ref: "#/definitions/ApiResponse"
    patch:
      tags:
      - "user"
      summary: "Updated user"
      operationId: "updateUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user that needs to be updated"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Updated user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/ApiResponse"
        "400": 
          description: "error updating user"
          schema: 
            $ref: "#/definitions/ApiResponse"
        "500":
          description: "error updating user"
          schema:
            $ref: "#/definitions/ApiResponse"
    delete:
      tags:
      - "user"
      summary: "Delete user"
      description: "Delete user from database"
      operationId: "deleteUser"
      produces:
      - "application/json"
      parameters:
      - name: "userId"
        in: "path"
        description: "The id of the user that needs to be deleted"
        required: true
        type: "string"
      responses:
        "204":
          description: "user delete successfully"
        "500":
          description: "error deleting user"
          schema:
            $ref: "#/definitions/ApiResponse"
definitions:
  CreateUser: 
    type: "object"
    properties:
      firt_name:
        type: "string"
      last_name:
        type: "string"
  User:
    type: "object"
    properties:
      id: 
        type: "string"
      firt_name:
        type: "string"
      last_name:
        type: "string"
  ApiResponse:
    type: "object"
    properties:
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"